#################################################################################
#                         OneBranch Pipelines - Official                        #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - /DRIContactManagement/*

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 1
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)\out
  NUGET_XMLDOC_MODE: none

  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2022:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers

resources:
  repositories: 
  - repository: templates
    type: git
    name: OneBranch.Pipelines/GovernedTemplates
    ref: refs/heads/main

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    featureFlags:
      EnableCDPxPAT: false
    cloudvault: # https://aka.ms/obpipelines/cloudvault
      enabled: false
    globalSdl: # https://aka.ms/obpipelines/sdl
      asyncSdl:
        enabled: true
        tsaOptionsFile: .config/tsaoptions.json
      tsa:
        enabled: false # onebranch publish all sdl results to TSA. If TSA is disabled all SDL tools will forced into 'break' build mode.
      # credscan:
      #   suppressionsFile: $(Build.SourcesDirectory)\.config\CredScanSuppressions.json
      binskim:
        break: true # always break the build on binskim issues in addition to TSA upload
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      # suppression:
      #   suppressionFile: $(Build.SourcesDirectory)\.gdn\global.gdnsuppress

    stages:
    - stage: build
      jobs:
      - job: main
        pool:
          type: windows  # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs
        
        variables:
          ob_outputDirectory: '$(REPOROOT)\out' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
          ob_sdl_binskim_break: true # https://aka.ms/obpipelines/sdl
          ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}: # conditionally enable symbolsPublishing for main branch only
            ob_symbolsPublishing_enabled: true # https://aka.ms/obpipelines/symbols
          
          # ob_sdl_suppression_suppressionFile: $(Build.SourcesDirectory)\.gdn\build.official.gdnsuppress

        steps:
        #  commenting this out because it fails: ##[error]Failed to find global.json at and inside path: C:\__w\1\s
        #   - task: UseDotNet@2
        #     continueOnError: true
        #     inputs:
        #       packageType: 'sdk'
        #       useGlobalJson: true
        #       performMultiLevelLookup: true

          - task: onebranch.pipeline.version@1 # generates automatic version. For other versioning options check https://aka.ms/obpipelines/versioning
            displayName: 'Setup BuildNumber'
            inputs:
              system: 'RevisionCounter'
              major: '1'
              minor: '0'
              exclude_commit: true

          - task: CmdLine@2
            displayName: 'Tree search'
            inputs:
              script: tree $(Build.SourcesDirectory) /f
              
          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: build
              projects: '$(Build.SourcesDirectory)\DRIContactManagement\DRIContactManagement.csproj'
              arguments: '--configuration release --configfile DRIContactManagement\Nuget.config' 
              feedsToUse: 'config'
              nugetConfigPath: 'https://pkgs.dev.azure.com/OneHRADO/33581106-1fd6-4092-9693-a20196c22142/_packaging/OneHRADO_PublicPackages/nuget/v3/index.json'

          - task: DotNetCoreCLI@2
            inputs:
              command: 'publish'
              publishWebProjects: true
              arguments: '--configuration relase --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: True

          - task: onebranch.pipeline.signing@1 # https://aka.ms/obpipelines/signing
            displayName: 'Sign output'
            inputs:
              command: 'sign'
              signing_environment: 'azure-ado'
              files_to_sign: '**/*.exe;**/*.dll;**/*.ps1;**/*.psm1'
              search_root: '$(Build.SourcesDirectory)\out'

          - task: DotNetCoreCLI@2
            displayName: 'Install EF tool'
            inputs:
                command: 'custom'
                custom: 'tool'
                arguments: 'install dotnet-ef --global --version 8.0.3'
                workingDirectory: '$(Build.SourcesDirectory)'
                feedsToUse: 'config'
                nugetConfigPath: 'https://pkgs.dev.azure.com/OneHRADO/33581106-1fd6-4092-9693-a20196c22142/_packaging/OneHRADO_PublicPackages/nuget/v3/index.json'

          - task: DotNetCoreCLI@2
            displayName: 'Generate EF SQL Script'
            inputs:
                command: 'custom'
                custom: 'ef'
                arguments: 'migrations script --verbose --project $(Build.SourcesDirectory)\DRIContactManagement\DRIContactManagement.csproj --output $(Build.SourcesDirectory)\script.sql  --idempotent'

          - task: PowerShell@2
            displayName: 'Update Az.Accounts Module'
            inputs:
              targetType: 'inline'
              script: |
                Get-PackageProvider -Name NuGet -ForceBootstrap
                Install-Module -Name Az.Accounts -Verbose -Force -AllowClobber
                Uninstall-AzureRm -Verbose;

          - task: AzurePowerShell@5
            displayName: 'Install SQLServer Module'
            inputs:
              azureSubscription: 'DRI Contact Pipeline'
              ScriptType: 'InlineScript'
              Inline: 'Install-Module -Name SqlServer -Force -Scope AllUsers'
              azurePowerShellVersion: 'LatestVersion'

          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy app to Azure'
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'DRI Contact Pipeline'
              appType: 'webApp'
              WebAppName: 'DRIContactManager'
              package: '$(build.artifactstagingdirectory)/*.zip'
            continueOnError: False

          - task: SqlAzureDacpacDeployment@1
            displayName: 'Update db'
            inputs:
              azureSubscription: 'DRI Contact Pipeline'
              AuthenticationType: 'servicePrincipal'
              ServerName: 'hrchangemanagement.database.windows.net'
              DatabaseName: 'drimanagement'
              deployType: 'SqlTask'
              SqlFile: '$(Build.SourcesDirectory)\script.sql'
              IpDetectionMethod: 'AutoDetect'